{% set handler_table_names = handler_table_name.lower().split(',') %}
from typing import List

from mindsdb.integrations.libs.api_handler import APITable
from mindsdb_sql.parser import ast
import pandas as pd


{% for table_name in handler_table_names -%}
class {{handler_name.title()}}{{table_name.title()}}Table(APITable):

    {% if handler_table_select %}
    def select(self, query: ast.Select) -> pd.DataFrame:
        """Selects data from the API and returns it as a pandas DataFrame.

        Returns dataframe representing the API results.

        Args:
            query (ast.Select): SQL SELECT query

        """
        pass
    {% endif %}

    def get_columns(self) -> List[str]:
        """ Gets all columns to be returned in pandas DataFrame responses

        Returns
            List of columns

        """
        return []

    {% if handler_table_insert %}
    def insert(self, query: ast.Insert):
        """ It implements the mappings from the ast.Insert and calls 
        the actual API through the call_application_api

        Args:
            query (ast.Insert): SQL INSERT query

        """
        pass
    {% endif %}

    {% if handler_table_delete %}
    def delete(self, query: ast.Delete):
        """ It implements the mappings from the ast.Delete and calls 
        the actual API through the call_application_api

        Args:
            query (ast.Delete): SQL query to parse.
        
        """
        pass
    {% endif %}

    {% if handler_table_update %}
    def update(self, query: ast.Update) -> None:
        """ It implements the mappings from the ast.Update and calls 
        the actual API through the call_application_api

        Args:
            query (ast.Update): SQL query to parse.

        """
        pass
    {% endif %}
{% endfor %}